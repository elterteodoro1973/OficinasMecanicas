@using OficinasMecanicas.Aplicacao.DTO.Agenda
@using OficinasMecanicas.Web.ViewModels.Agenda;
@using NonFactors.Mvc.Grid;
@using OficinasMecanicas.Web.ViewModels.Oficinas
@model IList<AgendamentosVisitasTelaInicialDTO>

@(
Html
        .Grid(Model)
        .Build(columns =>
        {
            columns.Add(model => model.NomeOficina).Titled("Oficina").Filterable(true);
            columns.Add(model => model.NomeUsuario).Titled("Agendador").Filterable(true);
            columns.Add(model => model.DataHora).Titled("Data/Hora");           
            columns.Add(model => $"</div classe='row'>" +
                             $"<a style='color: black;' href='{Url.Action("Editar", "AgendamentoVisita", new { id = model.Id })}'><i style='color: black;'  class='icon-mode-edit' style='padding-right:4rem'></i> Editar</a>" +
                             $"&nbsp;&nbsp" +
                             $"<a style='color: black;' href='#' onclick='excluir(`{model.Id}`)'><i style='color: black;' class='icon-delete' style='padding-right:4rem'></i> Excluir</a>" +
                             $"</div>")



    .Encoded(false);

        })
        .AppendCss("c-tabledata__table")
        .Using(GridFilterMode.Excel)
        .Sortable()
        .UsingUrl(@Url.Action("Index"))
        .RowAttributed(model => new { @class = "d-table-row" })
        .Empty("Nenhum registro encontrado.")
        .Pageable(pager =>
        {
            pager.PageSizes = new Dictionary<Int32, String> { { 0, "Todos" }, { 5, "5" }, { 10, "10" }, { 25, "25" }, { 50, "50" } };
            pager.ShowPageSizes = true;
            pager.PagesToDisplay = 5;
            pager.CurrentPage = 1;
            pager.RowsPerPage = 10;
        })
        )



<script></script>